<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:coreControls="clr-namespace:KB.AvaloniaCore.Controls;assembly=KB.AvaloniaCore"
			 xmlns:coreConverters="clr-namespace:KB.AvaloniaCore.Converters;assembly=KB.AvaloniaCore"
             xmlns:vm="clr-namespace:KB.ConsoleCompanion.CommandView;assembly=KB.ConsoleCompanion"
			 xmlns:companionAPI="clr-namespace:KB.ConsoleCompanionAPI.Data;assembly=KB.ConsoleCompanionAPI"
			 
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:kbIav="clr-namespace:KB.AvaloniaCore.Behaviors.Events;assembly=KB.AvaloniaCore"
			 xmlns:iav="clr-namespace:Avalonia.Xaml.Interactions.Events;assembly=Avalonia.Xaml.Interactions.Events"
			 
			 xmlns:local="clr-namespace:KB.ConsoleCompanion.CommandView"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="KB.ConsoleCompanion.CommandView.CommandView">

	<!--xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
	xmlns:iav="clr-namespace:Avalonia.Xaml.Interactions.Events;assembly=Avalonia.Xaml.Behaviors"-->
	<UserControl.DataContext>
        <vm:CommandViewModel />
    </UserControl.DataContext>
	
    <Grid>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" MinWidth="300"/>
			<ColumnDefinition Width="2"/>
			<ColumnDefinition Width="200" MinWidth="150"/>
		</Grid.ColumnDefinitions>
		
		<Grid Grid.Column="0" RowDefinitions="30,*,30">
			<!-- Toolbar -->
			<StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Stretch" Background="Aqua">
				<TextBlock Text="TOOL_BAR" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
			</StackPanel>
        
			<!-- Content -->
			<ListBox Grid.Row="1" x:FieldModifier="private" x:Name="_listBox"
					 ItemsSource="{Binding CommandsCollection}" SelectionMode="Single"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<local:CommandItemView ConsoleCommand="{Binding }"/>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<!--Textbox to write commands and a button to send them. Textbox should occupy nearly whole view horizontally-->
			<Grid Grid.Row="2" ColumnDefinitions="*, 80">
				<coreControls:EnchancedAutoCompleteBox Grid.Column="0" x:FieldModifier="private" x:Name="_commandInputTextBox"
						 HorizontalAlignment="Stretch"
						 ConfirmOnReturn="True" ConfirmOnReturnCommand="{Binding AddCommandLineCommand}" ConfirmReturn="_OnCommandInputTextBoxSendsCommand"
						 ItemsSource="{Binding AvailableCommands}" SilenceTabKey="True"
						 Watermark="Send commands..."/>
				<Button Grid.Column="1" x:FieldModifier="private" x:Name="_sendCommandButton"
						IsEnabled="{Binding #_commandInputTextBox.Text, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
						Content="Send" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						Click="_OnSendCommandClick"/>
			</Grid>
		</Grid>
		<GridSplitter Grid.Column="1"/>
		
		<!-- Available commands and macros -->
		<Grid Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" MinHeight="80" />
				<RowDefinition Height="2" />
				<RowDefinition Height="*" MinHeight="80" />
				<RowDefinition Height="2" />
				<RowDefinition Height="*" MinHeight="80" />
			</Grid.RowDefinitions>
			
			<!-- Running Macros -->
			<Grid Grid.Row="0" Background="Red">
				
			</Grid>
			<GridSplitter Grid.Row="1"/>
			<!-- Available Commands-->
			<Grid Grid.Row="2" >
				<Grid.RowDefinitions>
					<RowDefinition Height="30" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>
				
				<TextBlock Grid.Row="0" Text="Available Commands" />
				<ListBox Grid.Row="1" x:FieldModifier="private" x:Name="_availableCommandsListBox" ItemsSource="{Binding AvailableCommands}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Border Background="Transparent">
								<TextBlock Text="{Binding }" />
								<i:Interaction.Behaviors>
									<kbIav:DoubleTappedEventSubscriber DoubleTapped="_OnAvailableListBoxItemDoubleTapped"/>
								</i:Interaction.Behaviors>
							</Border>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Grid>
			<GridSplitter Grid.Row="3"/>
			<!-- Macros -->
			<Grid Grid.Row="4" Background="Yellow">

			</Grid>
		</Grid>
    </Grid>
</UserControl>
