<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:coreControls="clr-namespace:KB.AvaloniaCore.Controls;assembly=KB.AvaloniaCore"
			 xmlns:coreConverters="clr-namespace:KB.AvaloniaCore.Converters;assembly=KB.AvaloniaCore"
             xmlns:vm="clr-namespace:KB.ConsoleCompanion.CommandView;assembly=KB.ConsoleCompanion"
			 xmlns:companionAPI="clr-namespace:KB.ConsoleCompanionAPI.Data;assembly=KB.ConsoleCompanionAPI"
			 
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:kbIav="clr-namespace:KB.AvaloniaCore.Behaviors.Events;assembly=KB.AvaloniaCore"
			 xmlns:iav="clr-namespace:Avalonia.Xaml.Interactions.Events;assembly=Avalonia.Xaml.Interactions.Events"
			 
			 xmlns:local="clr-namespace:KB.ConsoleCompanion.CommandView"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="KB.ConsoleCompanion.CommandView.CommandView">

	<UserControl.DataContext>
        <vm:CommandViewModel />
    </UserControl.DataContext>

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceInclude Source="avares://KB.ConsoleCompanion/Resources/IconGeometryResources.axaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>
	
    <Grid>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" MinWidth="300"/>
			<ColumnDefinition Width="2"/>
			<ColumnDefinition Width="200" MinWidth="150"/>
		</Grid.ColumnDefinitions>
		
		<Grid Grid.Column="0" RowDefinitions="30,*,30">
			<!-- Toolbar -->
			<Grid Grid.Row="0" ColumnDefinitions="*, 40" Background="Gray">
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
					<Menu>
						<MenuItem Header="File">
							
							
							<MenuItem Header="Test1">
								<MenuItem.Icon>
									<Image>
										<Image.Source>
											<DrawingImage Drawing="{StaticResource VSImageLib2019.ClearWindowContent_16x}"/>
										</Image.Source>
									</Image>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="Test2">

							</MenuItem>

							<MenuItem Header="Test3">

							</MenuItem>

							<MenuItem Header="Test4">

							</MenuItem>
						</MenuItem>

						<MenuItem Command="{Binding ClearCommandCollectionCommand}" ToolTip.Tip="Clear">
							<MenuItem.Header>
								<Image Margin="5">
									<Image.Source>
										<DrawingImage Drawing="{StaticResource VSImageLib2019.ClearWindowContent_16x}"/>
									</Image.Source>
								</Image>
							</MenuItem.Header>
						</MenuItem>
					</Menu>
				</StackPanel>
				
				<Button Grid.Column="1" HorizontalAlignment="Right" Background="Transparent" Padding="0">
					<Image>
						<Image.Source>
							<DrawingImage Drawing="{StaticResource VSImageLib.Settings_Inverse_16x}"/>
						</Image.Source>
					</Image>
				</Button>
			</Grid>
        
			<!-- Content -->
			<ListBox Grid.Row="1" x:FieldModifier="private" x:Name="_listBox"
					 ItemsSource="{Binding CommandsCollection}" SelectionMode="Single"
					 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
				<ListBox.ItemTemplate>
					<DataTemplate>
						<local:CommandItemView ConsoleCommand="{Binding }"/>
					</DataTemplate>
				</ListBox.ItemTemplate>
			</ListBox>

			<!--Textbox to write commands and a button to send them. Textbox should occupy nearly whole view horizontally-->
			<Grid Grid.Row="2" ColumnDefinitions="*, 80">
				<coreControls:EnchancedAutoCompleteBox Grid.Column="0" x:FieldModifier="private" x:Name="_commandInputTextBox"
						 HorizontalAlignment="Stretch"
						 ConfirmOnReturn="True" ConfirmOnReturnCommand="{Binding AddCommandLineCommand}" ConfirmReturn="_OnCommandInputTextBoxSendsCommand"
						 ItemsSource="{Binding AvailableCommands}" SilenceTabKey="True"
						 Watermark="Send commands..."/>
				<Button Grid.Column="1" x:FieldModifier="private" x:Name="_sendCommandButton"
						IsEnabled="{Binding #_commandInputTextBox.Text, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
						Content="Send" HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
						Click="_OnSendCommandClick"/>
			</Grid>
		</Grid>
		<GridSplitter Grid.Column="1"/>
		
		<!-- Available commands and macros -->
		<Grid Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="*" MinHeight="80" />
				<RowDefinition Height="2" />
				<RowDefinition Height="*" MinHeight="80" />
			</Grid.RowDefinitions>
			
			<!-- Available Commands-->
			<Grid Grid.Row="0" RowDefinitions="30, *">
				<TextBlock Grid.Row="0" Text="Available Commands" />
				<ListBox Grid.Row="1" x:FieldModifier="private" x:Name="_availableCommandsListBox" ItemsSource="{Binding AvailableCommands}">
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Border Background="Transparent">
								<TextBlock Text="{Binding }" />
								<i:Interaction.Behaviors>
									<kbIav:DoubleTappedEventSubscriber DoubleTapped="_OnAvailableListBoxItemDoubleTapped"/>
								</i:Interaction.Behaviors>
							</Border>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Grid>
			<GridSplitter Grid.Row="1"/>
			<!-- Macros -->
			<Grid Grid.Row="2" RowDefinitions="30, *">
				<StackPanel Grid.Row="0" Orientation="Horizontal">
					<TextBlock Text="Macros" />
					<Button ToolTip.Tip="Add Macro" Background="Transparent">
						<Image>
							<Image.Source>
								<DrawingImage Drawing="{StaticResource VSImageLib2019.AddToDependancyGraph_16x}"/>
							</Image.Source>
						</Image>
					</Button>

					<Button ToolTip.Tip="Edit Macro" Background="Transparent">
						<Image>
							<Image.Source>
								<DrawingImage Drawing="{StaticResource VSImageLib.EditAssociation_16x}"/>
							</Image.Source>
						</Image>
					</Button>
				</StackPanel>
			</Grid>
		</Grid>
    </Grid>
</UserControl>
